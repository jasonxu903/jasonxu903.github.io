<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo 新建打开自动化]]></title>
    <url>%2F2018%2F09%2F01%2Fhexo-%E6%96%B0%E5%BB%BA%E6%89%93%E5%BC%80%E8%87%AA%E5%8A%A8%E5%8C%96%2F</url>
    <content type="text"><![CDATA[本篇用一个脚本实现新建文章时自动打开文本编辑器，如果你希望写博客的时候更智能一点，那么就往下看吧～ Let’s go! 如何实现自动化我们知道，新建一遍博客的命令是 hexo n &lt;title&gt;，在正常情况下，新建完成后是要自己手动打开对应文档去编辑内容的。有些喜欢按某种规则分类整理文件夹的同学可能会面临本地博客目录埋得太深的情境，这时候手动用编辑器打开就显得有些繁琐。 有没有什么办法能让编辑器在新建完成后自动打开呢？ 当然是有的，只需要编写一小段脚本即可满足你的愿望。 在你的博客根目录下，进行如下操作： 新建 scripts 文件夹； 在 scripts 文件夹内新建 auto.js 文件并编辑； 复制下面的代码进去，保存退出。 Windows 平台12345678910// 以下代码针对 Windows 平台var spawn = require('child_process').exec;// Hexo 2.x 用户复制这段hexo.on('new', function(path)&#123; exec('start "markdown编辑器绝对路径.exe" ' + path);&#125;);// Hexo 3 用户复制这段hexo.on('new', function(data)&#123; exec('start "markdown编辑器绝对路径.exe" ' + data.path);&#125;); Mac 平台12345678910// 以下代码针对 Mac 平台var exec = require('child_process').exec;// Hexo 2.x 用户复制这段hexo.on('new', function(path)&#123; exec('open -a "markdown编辑器绝对路径.app" ' + path);&#125;);// Hexo 3 用户复制这段hexo.on('new', function(data)&#123; exec('open -a "markdown编辑器绝对路径.app" ' + data.path);&#125;); Linux 平台Linux 平台下没有找到相关代码，只有一位博主根据 Mac 的代码自己写了一段，据说可以在所有平台通用，我没有试过，请读者自行尝试吧。 12345var exec = require('child_process').exec;hexo.on('new', function(data)&#123; exec('atom' +' '+ data.path);&#125;); 博主发现其实只要是能在命令行下直接以命令打开的编辑器都可以这样子用，比如sublime &amp; vim &amp; atom,也就是说最后这个应该是适用于所有平台(windows上测试过了没有问题)。 个人经验我是在 Mac 平台上搭建的博客，Mac 的编辑器绝对路径是 /Applications ，假设你用的编辑器是 atom，那么你应该在绝对路径处填写的就是 /Applications/atom.app。Windows 平台下的绝对路径请读者自行尝试。]]></content>
      <categories>
        <category>瞎折腾</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[静态博客搭建指北（二）]]></title>
    <url>%2F2018%2F08%2F31%2F%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8C%97%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[静态博客搭建第二弹上线啦～ 本篇集中于 NexT 主题配置问题，将博客美化成你喜欢的样子（大概）～ Let’s go! 添加「标签」页面以下内容参考 「NexT」主题配置 在终端窗口下，定位到 Hexo 站点目录下输入以下命令： 1$ hexo new page tags 编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下： 1234title: 标签date: 2014-12-22 12:39:04type: "tags"--- 在菜单中添加链接。编辑主题配置文件， 添加 tags 到 menu 中，如下: 1234menu: home: / archives: /archives tags: /tags 同样的原理，分类(categories)、关于(about)等页面也可以自行添加了。 给文章模版增加分类选项当我们通过 hexo n &quot;name&quot; 命令来新建一篇文章时，默认格式是这样的12345---title: namedate: yyyy-mm-dd xx:xx:xxtags:--- 可编辑的选项有标题、时间、标签，但是没有分类选项，如果每次都手动添加，难免感到麻烦。所以让我来给文章模版加入 categories: 项： 找到站点根目录下的 scaffolds/post.md 文件 打开该文件，在 tags: 项上面添加 categories: 并保存 再次执行 hexo n &quot;name&quot; 命令，新建的文件里就有 categories: 项了 增加 Read more 按钮默认情况下，首页的博文会显示全文，不仅阅读不方便，对一些人来说也不美观（没错就是我）。 修改 NexT 的配置文件限制博文在首页显示的长度可以解决这个问题，但会造成代码块显示混乱等一些问题。 最好的解决办法就是在每一篇博文里增加一行 &lt;!--more--&gt; 分隔符，hexo 会自动识别这行分隔符，在首页只显示分隔符上面的内容，分隔符下面的内容必须进入文章才能看到。但是手动给每一篇文章添加这个分隔符实在过于繁琐，一不小心就会忘记，所以我们来修改文章模版，将这条分隔符添加进去。 前面我们已经通过增加分类选项修改过一次文章模版文件了，再次打开这个文件，增加代码使之变成下面的格式 12345678---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;categories:tags:---&lt;!--more--&gt; 你可以在 &lt;!--more--&gt; 上面的位置写一些类似于文章摘要的东西，把文章主体放在下面的位置，对于不喜欢首页显示全部内容的同学，现在你的首页会焕然一新。 设置分类列表有时我们给文章设置的分类会包含中文，比如1categories: 编程 这样推送后，分类列表里就会出现编程这个选项，但是有点瑕疵的是访问路径也会包含中文1*/categories/编程 如果不希望这种情况出现，可以通过设置站点配置文件实现123456# Category &amp; Tagdefault_category: uncategorizedcategory_map: 编程: programming 生活: life 其他: other 修改主题样式NexT 主题包含有四种样式，如果你不喜欢默认的样式，可以修改配置文件换一个你喜欢的样式。 打开主题文件夹下的配置文件 _config.yml 找到下面的字段： 12345# Schemesscheme: Muse#scheme: Mist#scheme: Pisces#scheme: Gemini Muse 就是 NexT 默认的样式，删除你想要切换的样式前面的注释符号 #，再将默认样式注释掉，保存更改并重新生成即可完成修改，打开本地服务器看看新的样式，满意的话就可以部署上线了。 另外，配置文件中有这样一个字段： 1234sidebar: # Sidebar Position, available value: left | right (only for Pisces | Gemini). position: left #position: right 这一项配置对应修改的是边栏所在的位置，但需要注意的是，只有第三个样式 Pisces 支持这项修改，所以如果你喜欢 Pisces 的风格，不妨也试试这个选项吧。 第二弹到这里就结束了，内容不多，但相对第一弹更偏向细节，毕竟粗枝大叶的搭建工作在第一弹已经完成了，剩下的都是细节～ 以上！]]></content>
      <categories>
        <category>瞎折腾</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[静态博客搭建指北（一）]]></title>
    <url>%2F2018%2F08%2F31%2F%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8C%97%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[作为一只小白，从零开始自己搭建博客站点，可能要踩很多坑。 写这篇文章，最重要的目的就是记录过程，万一日后玩脱了也不致于从搜索开始全部重来一遍。 Let’s go! 部署前的准备博客放在哪里首先要决定博客托管的地方。GitHub Pages 是一个不错的选择，毕竟 GitHub 出品，安全、稳定、高效，拥有如此多的优点并且免费，对我来说就是首选了。 使用什么框架Google 一下适用于 GitHub Pages 的静态博客框架，出现频率最高的是 Hexo 和 Jeckll ，GitHub 似乎对 Jeckll 有某种程度上对原生支持，但 Hexo 是基于 JavaScript 和 Nodejs 的应用，对一个前端学习者而言，凡是能和所学搭边的都有无比对吸引力，于是毫不犹豫选择 Hexo 。 GitHub 上需要做的准备在你的 GitHub 上新建一个仓库，注意仓库名的规则，否则不能用作 GitHub Pages 。 username.github.io 这里的 “uesrname” 就是你创建仓库时前面的 “Owner” 下的名字。 之后勾选下面的 “Initialize this repository with a README”，点击创建仓库即可。 部署过程Hexo文档上有详实的部署及配置说明，在此只列出部分基本操作，更多具体选项和配置请阅读文档相关条目（其实就是不会 →_→ ）。 安装 Hexo安装 Hexo 前，首先检查计算机中是否已安装下列应用程序： Node.js Git 上述应用程序安装完毕后，就可以安装 Hexo 了。 1$ npm install -g hexo-cli 在本地建站安装完后执行下列命令， Hexo 会在指定文件夹内新建所需的文件。 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 执行命令后在指定文件夹内会出现以下文件结构。 1234567├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 再执行以下命令，安装 hexo-deployer-git 1$ npm install hexo-deployer-git --save 配置“_config.yml” 文件保存了大部分网站配置信息，部分配置说明如下。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788# Hexo Configuration## Docs: http://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Site #博客的基本信息title: Blog Title #博客标题subtitle: #博客副标题description: #博客描述，部分主题会用来生成简介author: Your Name #博客作者language: zh-Hans #语言timezone: #时区，默认与你的计算机相同# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://yoursite.com #你自己的域名root: / #根目录位置，如果只是github pages的子目录需要更改permalink: :year/:month/:day/:title/permalink_defaults:# Directory #文件结构 默认即可source_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writing #编辑博文的选项new_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: #代码高亮 enable: true #是否启用 line_number: true #是否显示行号 auto_detect: true tab_replace:# Category &amp; Tag #分类与标签default_category: uncategorizedcategory_map:tag_map:# Date / Time format #日期显示格式## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination #分页器## Set per_page to 0 to disable paginationper_page: 3pagination_dir: page# Extensions #拓展## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/## 主题安装参照下文所述theme: next #主题更换# Deployment #部署参数## Docs: http://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:username/username.github.io.git #你的GitHub仓库地址 branch: masterindex_generator: per_page: 3 ##首頁默认10篇文章标题 如果值为0不分页archive_generator: per_page: 10 ##归档页面默认10篇文章标题 yearly: true ##生成年视图 monthly: true ##生成月视图tag_generator: per_page: 10 ##标签分类页面默认10篇文章category_generator: per_page: 10 ###分类页面默认10篇文章 常用指令 hexo n &lt;title&gt;: 新建一篇文章 hexo g: 生成静态文件 hexo d: 部署上线 hexo s: 启动本地服务器 hexo clean: 清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。 美化及扩展换一个主题如果不喜欢 Hexo 的默认主题，可以在主题商店中挑选你好看的主题安装，下面以使用人数较多的 NexT 主题为例讲解如何安装一款主题。 执行下列命令，安装主题。 12$ cd hexo$ git clone https://github.com/theme-next/hexo-theme-next themes/next 执行下列命令，更新主题 12$ cd themes/next$ git pull 更新 Hexo 配置文件 “_config.yml” 1theme: next 至此，主题更换完毕 装一个插件初始状态下的 NexT 主题是没有搜索功能的，所以我们需要为其安装搜索服务。 我选取 Local Search 做为我的博客的搜索服务。 安装 hexo-generator-searchdb ，在站点的根目录下执行以下命令 1$ npm install hexo-generator-searchdb --save 编辑站点配置文件 _config.yml ，新增以下内容 12345search: path: search.xml field: post format: html limit: 10000 编辑主题配置文件 _config.yml(位于 theme/next 内)，启用搜索功能 123# Local searchlocal_search: enable: true 执行部署命令后，博客就有了搜索功能了。 这里给出 NexT 主题的第三方集成服务网址，上面给出了各个第三方服务的详细安装方法。 初次部署完结结语到此为止，整个博客的基础功能已经具备了，静态博客搭建指北的第一篇就到这里结束了。有些地方写的并不十分详细，原因就是懒→_→ 贴出一篇更为详细的搭建说明留作参考，更多配置相关请查看官方文档。 日后研究出更多 Hexo 功能或插件的使用方法再来继续更新这个系列。 以上！]]></content>
      <categories>
        <category>瞎折腾</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写博客啦]]></title>
    <url>%2F2018%2F08%2F31%2F%E5%BC%80%E5%8D%9A%E5%AE%A2%E5%95%A6%2F</url>
    <content type="text"><![CDATA[在不努力就买不起键盘、台灯、书架、MBPR… 所以，努力吧～！]]></content>
      <categories>
        <category>胡说八道</category>
      </categories>
  </entry>
</search>
